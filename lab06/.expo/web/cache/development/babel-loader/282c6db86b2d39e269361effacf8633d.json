{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/colemanulry/Documents/3rd Year/CS262/cs262/lab06/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://reactnative.dev/movies.json\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          data: json.movies\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      }).finally(function () {\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, isLoading ? React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }) : React.createElement(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref, index) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }\n          }, item.title, \", \", item.releaseYear);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/colemanulry/Documents/3rd Year/CS262/cs262/lab06/App.js"],"names":["React","Component","App","props","state","data","isLoading","fetch","then","response","json","setState","movies","catch","error","console","finally","flex","padding","index","id","item","title","releaseYear"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;IAGqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAHiB;AAOlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADR,EAEGF,IAFH,CAEQ,UAACE,IAAD,EAAU;AACd,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEN,UAAAA,IAAI,EAAEK,IAAI,CAACE;AAAb,SAAd;AACD,OAJH,EAKGC,KALH,CAKS,UAACC,KAAD;AAAA,eAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,OALT,EAMGE,OANH,CAMW,YAAM;AACb,QAAA,MAAI,CAACL,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OARH;AASD;;;6BAEQ;AAAA,wBACqB,KAAKF,KAD1B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,SADP,eACOA,SADP;AAGP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEW,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE;AAApB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,SAAS,GACR,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,GAGR,oBAAC,QAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,YAAY,EAAE,4BAASc,KAAT;AAAA,cAAGC,EAAH,QAAGA,EAAH;AAAA,iBAAmBA,EAAnB;AAAA,SAFhB;AAGE,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,IAAI,CAACC,KADR,QACiBD,IAAI,CAACE,WADtB,CADU;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADF;AAiBD;;;;EA1C8BtB,S;;SAAZC,G","sourcesContent":["import React, { Component } from \"react\";\nimport { ActivityIndicator, FlatList, Text, View } from \"react-native\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://reactnative.dev/movies.json\")\n      .then((response) => response.json())\n      .then((json) => {\n        this.setState({ data: json.movies });\n      })\n      .catch((error) => console.error(error))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n    const { data, isLoading } = this.state;\n\n    return (\n      <View style={{ flex: 1, padding: 24 }}>\n        {isLoading ? (\n          <ActivityIndicator />\n        ) : (\n          <FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <Text>\n                {item.title}, {item.releaseYear}\n              </Text>\n            )}\n          />\n        )}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}