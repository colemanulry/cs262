{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/colemanulry/Documents/3rd Year/CS262/cs262/lab06/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default App = function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch(\"https://reactnative.dev/movies.json\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.movies);\n    }).then(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, item.title, \", \", item.releaseYear);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/colemanulry/Documents/3rd Year/CS262/cs262/lab06/App.js"],"names":["React","useEffect","useState","App","isLoading","setLoading","data","setData","fetch","then","response","json","movies","error","console","finally","flex","padding","index","id","item","title","releaseYear"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAGA,eAAeC,GAAG,GAAG,eAAM;AAAA,kBACOD,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,MAClBE,SADkB;AAAA,MACPC,UADO;;AAAA,mBAEDH,QAAQ,CAAC,EAAD,CAFP;AAAA;AAAA,MAElBI,IAFkB;AAAA,MAEZC,OAFY;;AAIzBN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACE,IAAD;AAAA,aAAUJ,OAAO,CAACI,IAAI,CAACC,MAAN,CAAjB;AAAA,KAFR,EAGGH,IAHH,CAGQ,UAACI,KAAD;AAAA,aAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,KAHR,EAIGE,OAJH,CAIW;AAAA,aAAMV,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJX;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEW,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,SAAS,GACR,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,YAAY,EAAE,4BAASY,KAAT;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,aAAmBA,EAAnB;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACC,KADR,QACiBD,IAAI,CAACE,WADtB,CADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAiBD,CA7BD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ActivityIndicator, FlatList, Text, View } from \"react-native\";\n\nexport default App = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://reactnative.dev/movies.json\")\n      .then((response) => response.json())\n      .then((json) => setData(json.movies))\n      .then((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <View style={{ flex: 1, padding: 24 }}>\n      {isLoading ? (\n        <ActivityIndicator />\n      ) : (\n        <FlatList\n          data={data}\n          keyExtractor={({ id }, index) => id}\n          renderItem={({ item }) => (\n            <Text>\n              {item.title}, {item.releaseYear}\n            </Text>\n          )}\n        />\n      )}\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}